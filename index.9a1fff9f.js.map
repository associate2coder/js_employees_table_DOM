{"mappings":"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J7B,EAIyC,MAAC,OAAc,MAAA,CAAR,EAAQ,QAAQ,GAAA,IAAI,CAAC,IAAI,+BAKzE,SAAS,IAAI,CAAC,MAAM,CAAC,GACrB,WAAW,WAAM,OAAA,EAAa,MAAM,EAAI,EAAA,IAC1C,EAGM,EAAsB,SAAC,CAA7B,EACE,IAAM,EAAS,EAAM,SAAS,CAAC,IAE/B,EAAK,OAAO,CAAC,SAAC,CAAA,CAAO,CAArB,EACE,EAAO,UAAU,CAAC,IAAI,WAAW,CAC/B,AAAQ,WAAR,EAAmB,OAAO,qBAAqB,CAAC,GAAS,CAC7D,EACF,EAmBA,EAAK,gBAAgB,CAAC,SAjBQ,SAAC,CAA/B,EACE,EAAE,cAAc,GAGhB,IAAM,EAAW,IAAI,SADN,EAAE,MAAM,CAAC,OAAO,CAAC,SAE1B,EAjDC,MAAM,IAAI,CAiDW,GAhDzB,GAAG,CAAC,SADP,CAAA,EACS,IAAA,E,A,S,C,E,G,M,O,C,G,O,C,EAAA,I,A,S,C,C,C,E,I,E,E,E,A,M,E,K,A,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,A,M,G,I,E,E,C,E,C,E,E,C,E,G,C,I,E,E,I,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,AAAA,I,E,M,E,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,EAAA,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,EAAA,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,EAAA,G,EAAA,EAAA,I,A,W,M,A,U,6I,IAAA,EAAA,CAAA,CAAA,EAAA,CAAgB,OAAA,EAAhB,CAAA,CAAA,EAAA,CAA4C,EAClD,GAAA,MAAM,CAAC,SAAC,CAAR,EAAmB,MAAA,CAAC,EAAO,SAAS,AACpC,GAAA,GAAG,CAAC,SAAC,CAAL,EAAgB,OAAA,EAAO,OAAO,A,EAgD7B,AAAkB,CAAA,IAAlB,EAAO,MAAM,EAGf,EAAoB,GACpB,EAHgB,6CAKhB,EAAmB,EAEvB,GAOA,IAAM,EAAgB,SAAC,CAAA,CAAM,CAA7B,EACE,IAAM,EAAQ,EAAK,SAAS,CACtB,EAAW,AAAyC,WAAzC,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAM,CAAC,SAAS,AAErD,CAAA,EAAK,SAAS,CAAG,EAAW,OAAO,qBAAqB,CAAC,GAAS,CACpE,EAEM,EAAsB,SAAC,CAA7B,EACE,IAAM,EAAS,EAAE,MAAM,CACjB,EAAK,EAAE,MAAM,CAAC,UAAU,CAE9B,GAAI,GAAU,EAAI,CAChB,IAAM,EAAQ,EAAO,KAAK,AAE1B,CAAA,EAAO,MAAM,CAAG,CAAA,EAChB,EAAc,EAAI,EACpB,CACF,EAqBM,GARJ,CAFM,EAAQ,SAAS,aAAa,CAAC,UAE/B,YAAY,CAAC,OAAQ,QAC3B,EAAM,SAAS,CAAC,GAAG,CAAC,cACpB,EAAM,gBAAgB,CAAC,OAAQ,GAC/B,EAAM,gBAAgB,CAAC,UAdU,SAAC,CAApC,EACgB,UAAV,EAAE,GAAG,GACP,EAAE,cAAc,GAChB,EAAoB,GAExB,GAWS,GAKH,EAAsB,SAAC,CAA7B,EACE,EAAK,MAAM,CAAC,GACZ,EAAe,KAAK,EACtB,EAYA,EAAM,gBAAgB,CAAC,WATQ,SAAC,CAAhC,EACE,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,MAE5B,IACF,EAAO,WAAW,CAAG,GACrB,EAAoB,GAExB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// TABLE_VARIABLES\nvar table = document.querySelector(\"table\");\nvar tHead = table.tHead;\nvar tBody = table.tBodies[0];\n// #region SORTING\n// SORTING FUNCTIONS\nvar valueConversionFunctions = {\n    age: parseInt,\n    salary: window.convertSalaryToNumber\n};\nvar findSuitableSortingFunction = function(index, order) {\n    var transformFunc = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : function(x) {\n        return x;\n    };\n    return function(a, b) {\n        var valueA = transformFunc(window.getValueByCellIndex(a, index));\n        var valueB = transformFunc(window.getValueByCellIndex(b, index));\n        if (typeof valueA === \"string\" && typeof valueB === \"string\") return order * valueA.localeCompare(valueB);\n        return order * (valueA - valueB);\n    };\n};\nvar getSortingFunction = function(index, colHeader, ascOrder) {\n    var transformFunc = valueConversionFunctions[colHeader];\n    return ascOrder ? findSuitableSortingFunction(index, 1, transformFunc) : findSuitableSortingFunction(index, -1, transformFunc);\n};\n// TOGGLE ASC/DESC ORDER LOGIC\nvar ascDescOrderUtil = {\n    element: undefined,\n    ascOrder: undefined,\n    updateState: function(target) {\n        return {\n            element: target,\n            ascOrder: target === this.element ? !this.ascOrder : true\n        };\n    },\n    clickIsMade: function(target) {\n        var newState = this.updateState(target);\n        this.element = newState.element;\n        this.ascOrder = newState.ascOrder;\n    },\n    getValue: function() {\n        return this.ascOrder;\n    }\n};\n// HANDLING ASC/DESC CLICK EVENT\nvar handleSortingEvent = function(e) {\n    var target = e.target.closest(\"th\");\n    if (target) {\n        ascDescOrderUtil.clickIsMade(target);\n        var index = target.cellIndex;\n        var colHeader = target.textContent.toLowerCase();\n        var orderDirection = ascDescOrderUtil.getValue();\n        Array.from(tBody.rows).sort(getSortingFunction(index, colHeader, orderDirection)).forEach(function(row) {\n            return tBody.append(row);\n        });\n    }\n};\ntHead.addEventListener(\"click\", handleSortingEvent);\n// #endregion\n// #region SELECT_ROW\n// HANDLING ROW SELECT EVENT\nvar selectedRow = null;\nvar deselectRows = function() {\n    // for (const row of table.rows) {\n    //   if (row.classList.contains('active')) {\n    //     row.classList.remove('active');\n    //   }\n    // }\n    if (selectedRow && selectedRow.classList.contains(\"active\")) selectedRow.classList.remove(\"active\");\n};\ntBody.addEventListener(\"click\", function(e) {\n    var target = e.target.closest(\"tr\");\n    if (target) {\n        deselectRows();\n        target.classList.add(\"active\");\n        selectedRow = target;\n    }\n});\n// #endregion\n// #region FORM_NEW_EMPLOYEE\n// DATA FOR TJE FORM\nvar offices = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\n// CREATING FORM ELEMENTS\nvar formatLabelText = function(inputName) {\n    return \"\".concat(inputName.charAt(0).toUpperCase()).concat(inputName.substring(1), \": \");\n};\nvar createInput = function(inputName, inputType) {\n    var input = document.createElement(\"input\");\n    input.setAttribute(\"name\", inputName);\n    input.setAttribute(\"type\", inputType);\n    input.setAttribute(\"data-qa\", inputName);\n    var label = document.createElement(\"label\");\n    label.textContent = formatLabelText(inputName);\n    label.append(input);\n    return label;\n};\nvar createSelect = function(inputName, options) {\n    var select = document.createElement(\"select\");\n    select.setAttribute(\"name\", inputName);\n    select.setAttribute(\"data-qa\", inputName);\n    Array.from(options).sort().forEach(function(option) {\n        return select.append(new Option(option, option));\n    });\n    var label = document.createElement(\"label\");\n    label.textContent = formatLabelText(inputName);\n    label.append(select);\n    return label;\n};\nvar createButton = function(btnText, type) {\n    var button = document.createElement(\"button\");\n    button.setAttribute(\"type\", type);\n    button.textContent = btnText;\n    return button;\n};\nvar formElements = [\n    createInput(\"name\", \"text\"),\n    createInput(\"position\", \"text\"),\n    createSelect(\"office\", offices),\n    createInput(\"age\", \"number\"),\n    createInput(\"salary\", \"number\"),\n    createButton(\"Save to table\", \"submit\")\n];\n// CREATE FORM AND ADD ELEMENTS\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nformElements.forEach(function(element) {\n    return form.append(element);\n});\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    return document.body.append(form);\n});\n// FORM VALIDATION\nvar positionValidatorFunction = function(value) {\n    return !value ? {\n        validated: false,\n        message: \"Position is a required field!\"\n    } : {\n        validated: true\n    };\n};\nvar nameValidatorFunction = function(value) {\n    return !value || value.length < 4 ? {\n        validated: false,\n        message: \"Name should be more than 4 chars long\"\n    } : {\n        validated: true\n    };\n};\nvar ageValidatorFunction = function(value) {\n    return value < 18 || value > 90 ? {\n        validated: false,\n        message: \"Age must be between 18 and 90\"\n    } : {\n        validated: true\n    };\n};\nvar getValidatorFunction = function(value, key) {\n    var _validators_key;\n    var validators = {\n        position: positionValidatorFunction,\n        name: nameValidatorFunction,\n        age: ageValidatorFunction\n    };\n    return ((_validators_key = validators[key]) === null || _validators_key === void 0 ? void 0 : _validators_key.call(validators, value)) || {\n        validated: true\n    };\n};\nvar validateForm = function(data) {\n    return Array.from(data).map(function(param) {\n        var _param = _sliced_to_array(param, 2), key = _param[0], value = _param[1];\n        return getValidatorFunction(value, key);\n    }).filter(function(result) {\n        return !result.validated;\n    }).map(function(result) {\n        return result.message;\n    });\n};\n// NOTIFICATIONS ON SUCESS / ERROR\nvar displaySuccessNotice = function(message) {\n    displayNotification(\"success\", \"Success!\", [\n        message\n    ]);\n};\nvar displayErrorNotice = function(errorArray) {\n    displayNotification(\"error\", \"Error!\", errorArray);\n};\nvar displayNotification = function(type, titleText, errorMessageArr) {\n    var notification = document.createElement(\"div\");\n    notification.classList.add(\"notification\", type);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.innerHTML = '\\n    <h3 class=\"title\">'.concat(titleText, \"</h3>\\n    <p>\\n      <ul>\\n        \").concat(errorMessageArr.map(function(message) {\n        return \"<li>\".concat(message, \"</li>\");\n    }).join(\"\"), \"\\n      </ul>\\n    </p>\\n  \");\n    document.body.append(notification);\n    setTimeout(function() {\n        return notification.remove();\n    }, 2000);\n};\n// HANDLE FORM SUBMIT EVENT\nvar appendTableWithData = function(data) {\n    var newRow = tBody.insertRow(-1);\n    data.forEach(function(value, key) {\n        newRow.insertCell(-1).textContent = key === \"salary\" ? window.convertNumberToSalary(value) : value;\n    });\n};\nvar handleSubmitFormEvent = function(e) {\n    e.preventDefault();\n    var target = e.target.closest(\"form\");\n    var formData = new FormData(target);\n    var errors = validateForm(formData);\n    if (errors.length === 0) {\n        var message = \"New employee has been added to the list!\";\n        appendTableWithData(formData);\n        displaySuccessNotice(message);\n    } else displayErrorNotice(errors);\n};\nform.addEventListener(\"submit\", handleSubmitFormEvent);\n// #endregion\n// #region CELL_EDITTING\n// EVENT HANDLERS TO SAVE EDITED DATA\nvar saveCellInput = function(cell, value) {\n    var index = cell.cellIndex;\n    var isSalary = table.rows[0].cells[index].innerHTML === \"Salary\";\n    cell.innerHTML = isSalary ? window.convertNumberToSalary(value) : value;\n};\nvar handleSaveCellEvent = function(e) {\n    var target = e.target;\n    var td = e.target.parentNode;\n    if (target && td) {\n        var value = target.value;\n        target.hidden = true;\n        saveCellInput(td, value);\n    }\n};\nvar handleSaveCellOnEnterEvent = function(e) {\n    if (e.key === \"Enter\") {\n        e.preventDefault();\n        handleSaveCellEvent(e);\n    }\n};\n// CREATE CELL INPUT FIELD\nvar createCellInputField = function() {\n    var input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"text\");\n    input.classList.add(\"cell-input\");\n    input.addEventListener(\"blur\", handleSaveCellEvent);\n    input.addEventListener(\"keydown\", handleSaveCellOnEnterEvent);\n    return input;\n};\nvar cellInputField = createCellInputField();\nvar insertInputIntoCell = function(cell) {\n    cell.append(cellInputField);\n    cellInputField.focus();\n};\n// ADDING INPUT FIELD EVENT/HANDLER\nvar handleDoubleClickEvent = function(e) {\n    var target = e.target.closest(\"td\");\n    if (target) {\n        target.textContent = \"\";\n        insertInputIntoCell(target);\n    }\n};\ntBody.addEventListener(\"dblclick\", handleDoubleClickEvent); // #endregion\n\n//# sourceMappingURL=index.9a1fff9f.js.map\n","'use strict';\n\n// TABLE_VARIABLES\nconst table = document.querySelector('table');\nconst tHead = table.tHead;\nconst tBody = table.tBodies[0];\n\n// #region SORTING\n// SORTING FUNCTIONS\nconst valueConversionFunctions = {\n  age: parseInt,\n  salary: window.convertSalaryToNumber,\n};\n\nconst findSuitableSortingFunction = (\n  index,\n  order,\n  transformFunc = (x) => x,\n) => {\n  return (a, b) => {\n    const valueA = transformFunc(window.getValueByCellIndex(a, index));\n    const valueB = transformFunc(window.getValueByCellIndex(b, index));\n\n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return order * valueA.localeCompare(valueB);\n    }\n\n    return order * (valueA - valueB);\n  };\n};\n\nconst getSortingFunction = (index, colHeader, ascOrder) => {\n  const transformFunc = valueConversionFunctions[colHeader];\n\n  return ascOrder\n    ? findSuitableSortingFunction(index, 1, transformFunc)\n    : findSuitableSortingFunction(index, -1, transformFunc);\n};\n\n// TOGGLE ASC/DESC ORDER LOGIC\nconst ascDescOrderUtil = {\n  element: undefined,\n  ascOrder: undefined, // true -> asc, false -> desc\n\n  updateState(target) {\n    return {\n      element: target,\n      ascOrder: target === this.element ? !this.ascOrder : true,\n    };\n  },\n\n  clickIsMade(target) {\n    const newState = this.updateState(target);\n\n    this.element = newState.element;\n    this.ascOrder = newState.ascOrder;\n  },\n\n  getValue() {\n    return this.ascOrder;\n  },\n};\n\n// HANDLING ASC/DESC CLICK EVENT\nconst handleSortingEvent = (e) => {\n  const target = e.target.closest('th');\n\n  if (target) {\n    ascDescOrderUtil.clickIsMade(target);\n\n    const index = target.cellIndex;\n    const colHeader = target.textContent.toLowerCase();\n    const orderDirection = ascDescOrderUtil.getValue();\n\n    Array.from(tBody.rows)\n      .sort(getSortingFunction(index, colHeader, orderDirection))\n      .forEach((row) => tBody.append(row));\n  }\n};\n\ntHead.addEventListener('click', handleSortingEvent);\n// #endregion\n\n// #region SELECT_ROW\n// HANDLING ROW SELECT EVENT\nlet selectedRow = null;\n\nconst deselectRows = () => {\n  // for (const row of table.rows) {\n  //   if (row.classList.contains('active')) {\n  //     row.classList.remove('active');\n  //   }\n  // }\n  if (selectedRow && selectedRow.classList.contains('active')) {\n    selectedRow.classList.remove('active');\n  }\n};\n\ntBody.addEventListener('click', (e) => {\n  const target = e.target.closest('tr');\n\n  if (target) {\n    deselectRows();\n    target.classList.add('active');\n    selectedRow = target;\n  }\n});\n// #endregion\n\n// #region FORM_NEW_EMPLOYEE\n// DATA FOR TJE FORM\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\n// CREATING FORM ELEMENTS\nconst formatLabelText = (inputName) => {\n  return `${inputName.charAt(0).toUpperCase()}${inputName.substring(1)}: `;\n};\n\nconst createInput = (inputName, inputType) => {\n  const input = document.createElement('input');\n\n  input.setAttribute('name', inputName);\n  input.setAttribute('type', inputType);\n  input.setAttribute('data-qa', inputName);\n\n  const label = document.createElement('label');\n\n  label.textContent = formatLabelText(inputName);\n  label.append(input);\n\n  return label;\n};\n\nconst createSelect = (inputName, options) => {\n  const select = document.createElement('select');\n\n  select.setAttribute('name', inputName);\n  select.setAttribute('data-qa', inputName);\n\n  Array.from(options)\n    .sort()\n    .forEach((option) => select.append(new Option(option, option)));\n\n  const label = document.createElement('label');\n\n  label.textContent = formatLabelText(inputName);\n  label.append(select);\n\n  return label;\n};\n\nconst createButton = (btnText, type) => {\n  const button = document.createElement('button');\n\n  button.setAttribute('type', type);\n  button.textContent = btnText;\n\n  return button;\n};\n\nconst formElements = [\n  createInput('name', 'text'),\n  createInput('position', 'text'),\n  createSelect('office', offices),\n  createInput('age', 'number'),\n  createInput('salary', 'number'),\n  createButton('Save to table', 'submit'),\n];\n\n// CREATE FORM AND ADD ELEMENTS\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\nformElements.forEach((element) => form.append(element));\ndocument.addEventListener('DOMContentLoaded', () => document.body.append(form));\n\n// FORM VALIDATION\nconst positionValidatorFunction = (value) =>\n  !value\n    ? { validated: false, message: `Position is a required field!` }\n    : { validated: true };\n\nconst nameValidatorFunction = (value) =>\n  !value || value.length < 4\n    ? { validated: false, message: 'Name should be more than 4 chars long' }\n    : { validated: true };\n\nconst ageValidatorFunction = (value) =>\n  value < 18 || value > 90\n    ? { validated: false, message: 'Age must be between 18 and 90' }\n    : { validated: true };\n\nconst getValidatorFunction = (value, key) => {\n  const validators = {\n    position: positionValidatorFunction,\n    name: nameValidatorFunction,\n    age: ageValidatorFunction,\n  };\n\n  return validators[key]?.(value) || { validated: true };\n};\n\nconst validateForm = (data) => {\n  return Array.from(data)\n    .map(([key, value]) => getValidatorFunction(value, key))\n    .filter((result) => !result.validated)\n    .map((result) => result.message);\n};\n\n// NOTIFICATIONS ON SUCESS / ERROR\nconst displaySuccessNotice = (message) => {\n  displayNotification('success', 'Success!', [message]);\n};\n\nconst displayErrorNotice = (errorArray) => {\n  displayNotification('error', 'Error!', errorArray);\n};\n\nconst displayNotification = (type, titleText, errorMessageArr) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n\n  notification.innerHTML = `\n    <h3 class=\"title\">${titleText}</h3>\n    <p>\n      <ul>\n        ${errorMessageArr.map((message) => `<li>${message}</li>`).join('')}\n      </ul>\n    </p>\n  `;\n\n  document.body.append(notification);\n  setTimeout(() => notification.remove(), 2000);\n};\n\n// HANDLE FORM SUBMIT EVENT\nconst appendTableWithData = (data) => {\n  const newRow = tBody.insertRow(-1);\n\n  data.forEach((value, key) => {\n    newRow.insertCell(-1).textContent =\n      key === 'salary' ? window.convertNumberToSalary(value) : value;\n  });\n};\n\nconst handleSubmitFormEvent = (e) => {\n  e.preventDefault();\n\n  const target = e.target.closest('form');\n  const formData = new FormData(target);\n  const errors = validateForm(formData);\n\n  if (errors.length === 0) {\n    const message = 'New employee has been added to the list!';\n\n    appendTableWithData(formData);\n    displaySuccessNotice(message);\n  } else {\n    displayErrorNotice(errors);\n  }\n};\n\nform.addEventListener('submit', handleSubmitFormEvent);\n// #endregion\n\n// #region CELL_EDITTING\n// EVENT HANDLERS TO SAVE EDITED DATA\nconst saveCellInput = (cell, value) => {\n  const index = cell.cellIndex;\n  const isSalary = table.rows[0].cells[index].innerHTML === 'Salary';\n\n  cell.innerHTML = isSalary ? window.convertNumberToSalary(value) : value;\n};\n\nconst handleSaveCellEvent = (e) => {\n  const target = e.target;\n  const td = e.target.parentNode;\n\n  if (target && td) {\n    const value = target.value;\n\n    target.hidden = true;\n    saveCellInput(td, value);\n  }\n};\n\nconst handleSaveCellOnEnterEvent = (e) => {\n  if (e.key === 'Enter') {\n    e.preventDefault();\n    handleSaveCellEvent(e);\n  }\n};\n\n// CREATE CELL INPUT FIELD\nconst createCellInputField = () => {\n  const input = document.createElement('input');\n\n  input.setAttribute('type', 'text');\n  input.classList.add('cell-input');\n  input.addEventListener('blur', handleSaveCellEvent);\n  input.addEventListener('keydown', handleSaveCellOnEnterEvent);\n\n  return input;\n};\n\nconst cellInputField = createCellInputField();\n\nconst insertInputIntoCell = (cell) => {\n  cell.append(cellInputField);\n  cellInputField.focus();\n};\n\n// ADDING INPUT FIELD EVENT/HANDLER\nconst handleDoubleClickEvent = (e) => {\n  const target = e.target.closest('td');\n\n  if (target) {\n    target.textContent = '';\n    insertInputIntoCell(target);\n  }\n};\n\ntBody.addEventListener('dblclick', handleDoubleClickEvent);\n// #endregion\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","inputName","options","select","label","type","button","input","table","document","querySelector","tHead","tBody","tBodies","valueConversionFunctions","age","parseInt","salary","window","convertSalaryToNumber","findSuitableSortingFunction","index","order","transformFunc","arguments","x","a","b","valueA","getValueByCellIndex","valueB","localeCompare","getSortingFunction","colHeader","ascOrder","ascDescOrderUtil","element","undefined","updateState","target","clickIsMade","newState","getValue","addEventListener","e","closest","cellIndex","textContent","toLowerCase","orderDirection","from","rows","sort","forEach","row","append","selectedRow","deselectRows","classList","contains","remove","add","formatLabelText","concat","charAt","toUpperCase","substring","createInput","inputType","createElement","setAttribute","formElements","option","Option","form","body","positionValidatorFunction","value","validated","message","nameValidatorFunction","ageValidatorFunction","getValidatorFunction","key","_validators_key","validators","position","name","call","displaySuccessNotice","displayNotification","displayErrorNotice","errorArray","titleText","errorMessageArr","notification","innerHTML","map","join","setTimeout","appendTableWithData","data","newRow","insertRow","insertCell","convertNumberToSalary","preventDefault","formData","FormData","errors","param","_param","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","push","err","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","slice","constructor","test","_non_iterable_rest","TypeError","filter","result","saveCellInput","cell","isSalary","cells","handleSaveCellEvent","td","parentNode","hidden","cellInputField","insertInputIntoCell","focus"],"version":3,"file":"index.9a1fff9f.js.map"}